print|index|and|values
"	MethodDeclaration"
"		PredefinedType"
"		ParameterList"
"			Parameter"
"				IdentifierName"
"		Block"
"			ForStatement"
"				VariableDeclaration"
"					PredefinedType"
"					VariableDeclarator"
"						EqualsValueClause"
"							InvocationExpression"
"								SimpleMemberAccessExpression"
"									IdentifierName"
"									IdentifierName"
"								ArgumentList"
"									Argument"
"										NumericLiteralExpression"
"				LessThanOrEqualExpression"
"					IdentifierName"
"					InvocationExpression"
"						SimpleMemberAccessExpression"
"							IdentifierName"
"							IdentifierName"
"						ArgumentList"
"							Argument"
"								NumericLiteralExpression"
"				PostIncrementExpression"
"					IdentifierName"
"				ExpressionStatement"
"					InvocationExpression"
"						SimpleMemberAccessExpression"
"							IdentifierName"
"							IdentifierName"
"						ArgumentList"
"							Argument"
"								StringLiteralExpression"
"							Argument"
"								IdentifierName"
"							Argument"
"								InvocationExpression"
"									SimpleMemberAccessExpression"
"										IdentifierName"
"										IdentifierName"
"									ArgumentList"
"										Argument"
"											IdentifierName"
printing|names
"	MethodDeclaration"
"		PredefinedType"
"		ParameterList"
"		Block"
"			ExpressionStatement"
"				InvocationExpression"
"					SimpleMemberAccessExpression"
"						IdentifierName"
"						IdentifierName"
"					ArgumentList"
"						Argument"
"							StringLiteralExpression"
"			ExpressionStatement"
"				InvocationExpression"
"					SimpleMemberAccessExpression"
"						IdentifierName"
"						IdentifierName"
"					ArgumentList"
"						Argument"
"							StringLiteralExpression"
"			ExpressionStatement"
"				InvocationExpression"
"					SimpleMemberAccessExpression"
"						IdentifierName"
"						IdentifierName"
"					ArgumentList"
"						Argument"
"							StringLiteralExpression"
colorful|write|line
"	MethodDeclaration"
"		PredefinedType"
"		ParameterList"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				IdentifierName"
"		Block"
"			ExpressionStatement"
"				SimpleAssignmentExpression"
"					SimpleMemberAccessExpression"
"						IdentifierName"
"						IdentifierName"
"					IdentifierName"
"			ExpressionStatement"
"				InvocationExpression"
"					SimpleMemberAccessExpression"
"						IdentifierName"
"						IdentifierName"
"					ArgumentList"
"						Argument"
"							IdentifierName"
"			ExpressionStatement"
"				InvocationExpression"
"					SimpleMemberAccessExpression"
"						IdentifierName"
"						IdentifierName"
"					ArgumentList"
printing|names
"	MethodDeclaration"
"		PredefinedType"
"		ParameterList"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"		Block"
"			ExpressionStatement"
"				InvocationExpression"
"					SimpleMemberAccessExpression"
"						IdentifierName"
"						IdentifierName"
"					ArgumentList"
"						Argument"
"							InterpolatedStringExpression"
"								InterpolatedStringText"
"								Interpolation"
"									IdentifierName"
"								InterpolatedStringText"
"								Interpolation"
"									IdentifierName"
sort|three|numbers
"	MethodDeclaration"
"		ArrayType"
"			PredefinedType"
"			ArrayRankSpecifier"
"				OmittedArraySizeExpression"
"		ParameterList"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"		Block"
"			LocalDeclarationStatement"
"				VariableDeclaration"
"					ArrayType"
"						PredefinedType"
"						ArrayRankSpecifier"
"							OmittedArraySizeExpression"
"					VariableDeclarator"
"						EqualsValueClause"
"							ArrayCreationExpression"
"								ArrayType"
"									PredefinedType"
"									ArrayRankSpecifier"
"										NumericLiteralExpression"
"			IfStatement"
"				LogicalAndExpression"
"					ParenthesizedExpression"
"						LessThanExpression"
"							IdentifierName"
"							IdentifierName"
"					ParenthesizedExpression"
"						LessThanExpression"
"							IdentifierName"
"							IdentifierName"
"				Block"
"					ExpressionStatement"
"						SimpleAssignmentExpression"
"							ElementAccessExpression"
"								IdentifierName"
"								BracketedArgumentList"
"									Argument"
"										NumericLiteralExpression"
"							IdentifierName"
"					IfStatement"
"						LessThanExpression"
"							IdentifierName"
"							IdentifierName"
"						Block"
"							ExpressionStatement"
"								SimpleAssignmentExpression"
"									ElementAccessExpression"
"										IdentifierName"
"										BracketedArgumentList"
"											Argument"
"												NumericLiteralExpression"
"									IdentifierName"
"							ExpressionStatement"
"								SimpleAssignmentExpression"
"									ElementAccessExpression"
"										IdentifierName"
"										BracketedArgumentList"
"											Argument"
"												NumericLiteralExpression"
"									IdentifierName"
"						ElseClause"
"							Block"
"								ExpressionStatement"
"									SimpleAssignmentExpression"
"										ElementAccessExpression"
"											IdentifierName"
"											BracketedArgumentList"
"												Argument"
"													NumericLiteralExpression"
"										IdentifierName"
"								ExpressionStatement"
"									SimpleAssignmentExpression"
"										ElementAccessExpression"
"											IdentifierName"
"											BracketedArgumentList"
"												Argument"
"													NumericLiteralExpression"
"										IdentifierName"
"				ElseClause"
"					IfStatement"
"						LogicalAndExpression"
"							ParenthesizedExpression"
"								LessThanExpression"
"									IdentifierName"
"									IdentifierName"
"							ParenthesizedExpression"
"								LessThanExpression"
"									IdentifierName"
"									IdentifierName"
"						Block"
"							ExpressionStatement"
"								SimpleAssignmentExpression"
"									ElementAccessExpression"
"										IdentifierName"
"										BracketedArgumentList"
"											Argument"
"												NumericLiteralExpression"
"									IdentifierName"
"							IfStatement"
"								LessThanExpression"
"									IdentifierName"
"									IdentifierName"
"								Block"
"									ExpressionStatement"
"										SimpleAssignmentExpression"
"											ElementAccessExpression"
"												IdentifierName"
"												BracketedArgumentList"
"													Argument"
"														NumericLiteralExpression"
"											IdentifierName"
"									ExpressionStatement"
"										SimpleAssignmentExpression"
"											ElementAccessExpression"
"												IdentifierName"
"												BracketedArgumentList"
"													Argument"
"														NumericLiteralExpression"
"											IdentifierName"
"								ElseClause"
"									Block"
"										ExpressionStatement"
"											SimpleAssignmentExpression"
"												ElementAccessExpression"
"													IdentifierName"
"													BracketedArgumentList"
"														Argument"
"															NumericLiteralExpression"
"												IdentifierName"
"										ExpressionStatement"
"											SimpleAssignmentExpression"
"												ElementAccessExpression"
"													IdentifierName"
"													BracketedArgumentList"
"														Argument"
"															NumericLiteralExpression"
"												IdentifierName"
"						ElseClause"
"							IfStatement"
"								LogicalAndExpression"
"									ParenthesizedExpression"
"										LessThanExpression"
"											IdentifierName"
"											IdentifierName"
"									ParenthesizedExpression"
"										LessThanExpression"
"											IdentifierName"
"											IdentifierName"
"								Block"
"									ExpressionStatement"
"										SimpleAssignmentExpression"
"											ElementAccessExpression"
"												IdentifierName"
"												BracketedArgumentList"
"													Argument"
"														NumericLiteralExpression"
"											IdentifierName"
"									IfStatement"
"										LessThanExpression"
"											IdentifierName"
"											IdentifierName"
"										Block"
"											ExpressionStatement"
"												SimpleAssignmentExpression"
"													ElementAccessExpression"
"														IdentifierName"
"														BracketedArgumentList"
"															Argument"
"																NumericLiteralExpression"
"													IdentifierName"
"											ExpressionStatement"
"												SimpleAssignmentExpression"
"													ElementAccessExpression"
"														IdentifierName"
"														BracketedArgumentList"
"															Argument"
"																NumericLiteralExpression"
"													IdentifierName"
"										ElseClause"
"											Block"
"												ExpressionStatement"
"													SimpleAssignmentExpression"
"														ElementAccessExpression"
"															IdentifierName"
"															BracketedArgumentList"
"																Argument"
"																	NumericLiteralExpression"
"														IdentifierName"
"												ExpressionStatement"
"													SimpleAssignmentExpression"
"														ElementAccessExpression"
"															IdentifierName"
"															BracketedArgumentList"
"																Argument"
"																	NumericLiteralExpression"
"														IdentifierName"
"			ReturnStatement"
"				IdentifierName"
addition
"	MethodDeclaration"
"		PredefinedType"
"		ParameterList"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"		Block"
"			LocalDeclarationStatement"
"				VariableDeclaration"
"					PredefinedType"
"					VariableDeclarator"
"						EqualsValueClause"
"							AddExpression"
"								IdentifierName"
"								IdentifierName"
"			ReturnStatement"
"				IdentifierName"
area
"	MethodDeclaration"
"		PredefinedType"
"		ParameterList"
"			Parameter"
"				PredefinedType"
"		Block"
"			ReturnStatement"
"				MultiplyExpression"
"					IdentifierName"
"					IdentifierName"
area
"	MethodDeclaration"
"		PredefinedType"
"		ParameterList"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"		Block"
"			ReturnStatement"
"				MultiplyExpression"
"					IdentifierName"
"					IdentifierName"
area
"	MethodDeclaration"
"		PredefinedType"
"		ParameterList"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"		Block"
"			LocalDeclarationStatement"
"				VariableDeclaration"
"					PredefinedType"
"					VariableDeclarator"
"						EqualsValueClause"
"							DivideExpression"
"								InvocationExpression"
"									IdentifierName"
"									ArgumentList"
"										Argument"
"											IdentifierName"
"										Argument"
"											IdentifierName"
"										Argument"
"											IdentifierName"
"								NumericLiteralExpression"
"			LocalDeclarationStatement"
"				VariableDeclaration"
"					PredefinedType"
"					VariableDeclarator"
"						EqualsValueClause"
"							InvocationExpression"
"								SimpleMemberAccessExpression"
"									IdentifierName"
"									IdentifierName"
"								ArgumentList"
"									Argument"
"										MultiplyExpression"
"											MultiplyExpression"
"												MultiplyExpression"
"													IdentifierName"
"													ParenthesizedExpression"
"														SubtractExpression"
"															IdentifierName"
"															IdentifierName"
"												ParenthesizedExpression"
"													SubtractExpression"
"														IdentifierName"
"														IdentifierName"
"											ParenthesizedExpression"
"												SubtractExpression"
"													IdentifierName"
"													IdentifierName"
"			ReturnStatement"
"				IdentifierName"
print|names
"	MethodDeclaration"
"		PredefinedType"
"		ParameterList"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"		Block"
"			ExpressionStatement"
"				InvocationExpression"
"					SimpleMemberAccessExpression"
"						IdentifierName"
"						IdentifierName"
"					ArgumentList"
"						Argument"
"							InterpolatedStringExpression"
"								InterpolatedStringText"
"								Interpolation"
"									IdentifierName"
"								InterpolatedStringText"
"								Interpolation"
"									IdentifierName"
"								InterpolatedStringText"
print|names
"	MethodDeclaration"
"		PredefinedType"
"		ParameterList"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"		Block"
"			ExpressionStatement"
"				InvocationExpression"
"					SimpleMemberAccessExpression"
"						IdentifierName"
"						IdentifierName"
"					ArgumentList"
"						Argument"
"							InterpolatedStringExpression"
"								InterpolatedStringText"
"								Interpolation"
"									IdentifierName"
"								InterpolatedStringText"
"								Interpolation"
"									IdentifierName"
"								InterpolatedStringText"
"								Interpolation"
"									IdentifierName"
"								InterpolatedStringText"
print|names
"	MethodDeclaration"
"		PredefinedType"
"		ParameterList"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				IdentifierName"
"		Block"
"			ExpressionStatement"
"				SimpleAssignmentExpression"
"					SimpleMemberAccessExpression"
"						IdentifierName"
"						IdentifierName"
"					IdentifierName"
"			ExpressionStatement"
"				InvocationExpression"
"					SimpleMemberAccessExpression"
"						IdentifierName"
"						IdentifierName"
"					ArgumentList"
"						Argument"
"							InterpolatedStringExpression"
"								InterpolatedStringText"
"								Interpolation"
"									IdentifierName"
"								InterpolatedStringText"
"								Interpolation"
"									IdentifierName"
"								InterpolatedStringText"
"			ExpressionStatement"
"				InvocationExpression"
"					SimpleMemberAccessExpression"
"						IdentifierName"
"						IdentifierName"
"					ArgumentList"
sum
"	MethodDeclaration"
"		PredefinedType"
"		ParameterList"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"		Block"
"			ReturnStatement"
"				AddExpression"
"					IdentifierName"
"					IdentifierName"
sum
"	MethodDeclaration"
"		PredefinedType"
"		ParameterList"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"		Block"
"			ReturnStatement"
"				AddExpression"
"					AddExpression"
"						IdentifierName"
"						IdentifierName"
"					IdentifierName"
sum
"	MethodDeclaration"
"		PredefinedType"
"		ParameterList"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"		Block"
"			ReturnStatement"
"				AddExpression"
"					AddExpression"
"						AddExpression"
"							IdentifierName"
"							IdentifierName"
"						IdentifierName"
"					IdentifierName"
write|line|placeholders
"	MethodDeclaration"
"		PredefinedType"
"		ParameterList"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				ArrayType"
"					PredefinedType"
"					ArrayRankSpecifier"
"						OmittedArraySizeExpression"
"		Block"
"			LocalDeclarationStatement"
"				VariableDeclaration"
"					PredefinedType"
"					VariableDeclarator"
"						EqualsValueClause"
"							SimpleMemberAccessExpression"
"								PredefinedType"
"								IdentifierName"
"			LocalDeclarationStatement"
"				VariableDeclaration"
"					PredefinedType"
"					VariableDeclarator"
"						EqualsValueClause"
"							NumericLiteralExpression"
"			ForStatement"
"				VariableDeclaration"
"					PredefinedType"
"					VariableDeclarator"
"						EqualsValueClause"
"							NumericLiteralExpression"
"				LessThanExpression"
"					IdentifierName"
"					SimpleMemberAccessExpression"
"						IdentifierName"
"						IdentifierName"
"				PostIncrementExpression"
"					IdentifierName"
"				Block"
"					IfStatement"
"						EqualsExpression"
"							InvocationExpression"
"								SimpleMemberAccessExpression"
"									ElementAccessExpression"
"										IdentifierName"
"										BracketedArgumentList"
"											Argument"
"												IdentifierName"
"									IdentifierName"
"								ArgumentList"
"							StringLiteralExpression"
"						Block"
"							ExpressionStatement"
"								SimpleAssignmentExpression"
"									IdentifierName"
"									InvocationExpression"
"										SimpleMemberAccessExpression"
"											PredefinedType"
"											IdentifierName"
"										ArgumentList"
"											Argument"
"												InvocationExpression"
"													SimpleMemberAccessExpression"
"														ElementAccessExpression"
"															IdentifierName"
"															BracketedArgumentList"
"																Argument"
"																	AddExpression"
"																		IdentifierName"
"																		NumericLiteralExpression"
"														IdentifierName"
"													ArgumentList"
"							ExpressionStatement"
"								AddAssignmentExpression"
"									IdentifierName"
"									ElementAccessExpression"
"										IdentifierName"
"										BracketedArgumentList"
"											Argument"
"												IdentifierName"
"							ExpressionStatement"
"								AddAssignmentExpression"
"									IdentifierName"
"									NumericLiteralExpression"
"						ElseClause"
"							Block"
"								ExpressionStatement"
"									AddAssignmentExpression"
"										IdentifierName"
"										ElementAccessExpression"
"											IdentifierName"
"											BracketedArgumentList"
"												Argument"
"													IdentifierName"
"			ExpressionStatement"
"				InvocationExpression"
"					SimpleMemberAccessExpression"
"						IdentifierName"
"						IdentifierName"
"					ArgumentList"
"						Argument"
"							IdentifierName"
perimeter
"	MethodDeclaration"
"		PredefinedType"
"		ParameterList"
"			Parameter"
"				ArrayType"
"					PredefinedType"
"					ArrayRankSpecifier"
"						OmittedArraySizeExpression"
"		Block"
"			LocalDeclarationStatement"
"				VariableDeclaration"
"					PredefinedType"
"					VariableDeclarator"
"						EqualsValueClause"
"							NumericLiteralExpression"
"			ForStatement"
"				VariableDeclaration"
"					PredefinedType"
"					VariableDeclarator"
"						EqualsValueClause"
"							NumericLiteralExpression"
"				LessThanExpression"
"					IdentifierName"
"					SimpleMemberAccessExpression"
"						IdentifierName"
"						IdentifierName"
"				PostIncrementExpression"
"					IdentifierName"
"				Block"
"					ExpressionStatement"
"						AddAssignmentExpression"
"							IdentifierName"
"							ElementAccessExpression"
"								IdentifierName"
"								BracketedArgumentList"
"									Argument"
"										IdentifierName"
"			ReturnStatement"
"				IdentifierName"
sum
"	MethodDeclaration"
"		PredefinedType"
"		ParameterList"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"				EqualsValueClause"
"					NumericLiteralExpression"
"		Block"
"			ReturnStatement"
"				AddExpression"
"					AddExpression"
"						IdentifierName"
"						IdentifierName"
"					IdentifierName"
multi
"	MethodDeclaration"
"		PredefinedType"
"		ParameterList"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"				EqualsValueClause"
"					NumericLiteralExpression"
"		Block"
"			ReturnStatement"
"				MultiplyExpression"
"					MultiplyExpression"
"						IdentifierName"
"						IdentifierName"
"					IdentifierName"
connect|to|db
"	MethodDeclaration"
"		PredefinedType"
"		ParameterList"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"				EqualsValueClause"
"					StringLiteralExpression"
"		Block"
"			ExpressionStatement"
"				InvocationExpression"
"					SimpleMemberAccessExpression"
"						IdentifierName"
"						IdentifierName"
"					ArgumentList"
"						Argument"
"							InterpolatedStringExpression"
"								InterpolatedStringText"
"								Interpolation"
"									IdentifierName"
"								InterpolatedStringText"
"								Interpolation"
"									IdentifierName"
"								InterpolatedStringText"
modify|array
"	MethodDeclaration"
"		PredefinedType"
"		ParameterList"
"			Parameter"
"				PredefinedType"
"		Block"
"			ExpressionStatement"
"				PostIncrementExpression"
"					IdentifierName"
area|and|perimeter|of|rectangle
"	MethodDeclaration"
"		PredefinedType"
"		ParameterList"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"			Parameter"
"				PredefinedType"
"		Block"
"			ExpressionStatement"
"				SimpleAssignmentExpression"
"					IdentifierName"
"					MultiplyExpression"
"						IdentifierName"
"						IdentifierName"
"			ExpressionStatement"
"				SimpleAssignmentExpression"
"					IdentifierName"
"					AddExpression"
"						MultiplyExpression"
"							NumericLiteralExpression"
"							IdentifierName"
"						MultiplyExpression"
"							NumericLiteralExpression"
"							IdentifierName"
